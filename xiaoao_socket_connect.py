import socket
import threading

'''
笑傲梦幻破解
将本地127.0.0.1的数据表转发至远程服务器
'''
def forward_data(src_socket, dest_socket):
    while True:
        try:
            data = src_socket.recv(4096)
            if not data:
                break
            dest_socket.send(data)
        except:
            break

def handle_client(client_socket, remote_host, remote_port):
    remote_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    remote_socket.connect((remote_host, remote_port))

    client_to_remote_thread = threading.Thread(target=forward_data, args=(client_socket, remote_socket))
    remote_to_client_thread = threading.Thread(target=forward_data, args=(remote_socket, client_socket))

    client_to_remote_thread.start()
    remote_to_client_thread.start()

    client_to_remote_thread.join()
    remote_to_client_thread.join()

    client_socket.close()
    remote_socket.close()

def main():
    local_host = "127.0.0.1"
    local_port = 9097
    remote_host = "114.115.147.61"
    remote_port = 9097

    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((local_host, local_port))
    server_socket.listen(5)

    print(f"[*] Listening on {local_host}:{local_port}")

    while True:
        try:
            client_socket, addr = server_socket.accept()
            print(f"[*] Accepted connection from {addr[0]}:{addr[1]}")
            client_handler = threading.Thread(target=handle_client, args=(client_socket, remote_host, remote_port))
            client_handler.start()
        except KeyboardInterrupt:
            print("\n[!] Server is shutting down.")
            break
        except Exception as e:
            print(f"Error: {e}")

    server_socket.close()

if __name__ == "__main__":
    main()
